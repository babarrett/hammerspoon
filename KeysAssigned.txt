Keys assigned, where, handled by what.

√ Delete Caps Lock from USB Overdrive !!
√ Add to .git/configure
	[credential "https://github.com"]
		username = babarrett

Generally:
	Hammerspoon for:	HyperFn, Window sizing, Screen and Space management
						init.lua. *.lua. Shared configurations. Fully programable.
						HyperFnStriing = "⌘⌥⌃⇧"
	Karabiner for:		SpaceFn, ()-like pairs
						private.xml (or SpaceFN_bruce.xml) Shared configurations. 
						Capable, but not fully programable. No events?
	USB Overdrive for:	(replace with other?)
						Easy to configure. Some sharing possible.
						No Apple products
	BBEdit for:			Code snippets. Auto-completion.  Navigate by f()
	iTerm2 for:			Command-line keys, remap (begin/end line & word)
	
	NOTES on kext:
		kextstat | grep -v com.apple
		Name (Version)
		com.usboverdrive.driver.hid (3.2)
		com.razer.common.razerhid (16.45)
		org.pqrs.driver.Karabiner (10.22.0)
		org.pqrs.driver.Seil (12.1.0)

		USBOverdrive is a kext.
		RazerHid is a kext. Seems to be left behind even after uninstall. (Home laptop)
		Karabiner is a kext, it hooks in at a much lower level than Hammerspoon.
		
	

Kbd		OSX Pref	Seil	Hammer	Karab	USB Ov*	Function
---		--------	----	------	-----	-------	------------------------------------
		CapsLok										No Action
					CapsLok							Map to F19
													
							HyperFn					Cmd+Opt+Ctrl+Shift
							Hyper+U					Fetch the current URL from Safari, type it
							Hyper+V					Type clipboard as text (avoid web site CMD-V blockers)
							Hyper+H					Help, for Hammerspoon functions
							Hyper+Esc				Stop displaying Help
							HyperFn+Q				Quit App
							HyperFn+W				Close window (or tab)
							HyperFn+D				Dictate on/off
							HyperFn+/				Cmd-Shift (for move to done in Mail)
							
							Hyper+Left				Window to left half of screen
							Hyper+Right				Window to right half of screen
							Hyper+Up				Window to top half of screen
							Hyper+Down				Window to bottom half of screen
													
									Space			Tap for Space, Hold+char for SpaceFn
deleted								[				()+Left
deleted								Shift+[			)
deleted								]				<>+Left
deleted								Shift+]			>
deleted								SpaceFn+9		[]+Left
deleted								Shift+9			]
deleted								SpaceFn+0		{}+Left
deleted								Shift+0			}
									F1-F12			Apps & Web pages
									
											NumPad	Misc functions, Numeric pad, Razer Anansi only
											M1-M4	Cut, Copy, Paste, Undo
											M5		OS X Dictation on/off
											T1-T7	Misc
											


* USB Overdrive cannot modify Apple products, by design.
	These functions should be moved to other products/systems
	such as Hammerspoon or Karabiner:
	a) so that external Apple keyboards, such as those with numeric pads, work, and
	b) so that fewer keyboard interceptors are in use, simplifying implementation
		and tracking.

---------------------------------------------------------------------
Things to consider adding:

Unload and delete the razer kext (still present on home MacBook Pro)

Screen and Space management
Maybe, rotate right by 1, for line movement & selection: SpaceFn+(TYUIOP)

appCuts = {
  d = 'Dictionary',
  i = 'iterm',
  c = 'Google chrome',
  t = 'Paws For Trello',
  -- 4 reserved for dash shortcut 
  z = 'Zim',
  v = 'Google Calendar',
  ??= 'Google Hangouts'
  ??= indent selection
  ??= outdent selection
  cmd-l: go to URL & Send mail
  spotlight - useful?
}

Additional resources:
	Tutorial:	http://www.hammerspoon.org/go/ 
	Cycle through displays: http://bezhermoso.github.io/2016/01/20/making-perfect-ramen-lua-os-x-automation-with-hammerspoon/
	for app binding:	hs.hotkey.bind(HyperFn, 'D', function () hs.application.launchOrFocus("Dictionary") end)

https://gist.github.com/dalemanthei/dde8bccb22c3a2d3487a6e7d77be33f5


Absolutely essential and I can hardly live without it. Tap to click is fine on
the touchpad, but "click to drag" was something I hated until I did this
mapping. If you haven't already mapped Caps Lock to something else you can't
live without, I would highly recommend trying this. You'll probably need
Karabiner's partner program Seil to do it:
(https://pqrs.org/osx/karabiner/seil.html.en)

mods - A table or a string containing (as elements, or as substrings with any
separator) the keyboard modifiers required, which should be zero or more of the
following:
"cmd", "command" or "⌘"
"ctrl", "control" or "⌃"
"alt", "option" or "⌥"
"shift" or "⇧"


-- Launch applications
-- from: https://github.com/talha131/dotfiles/blob/master/hammerspoon/launch-applications.lua
local modalKey = hs.hotkey.modal.new(hyper, 'A', 'Launch Application mode')
modalKey:bind('', 'escape', function() modalKey:exit() end)

local appShortCuts = {

    C = 'Visual Studio Code',
    D = 'Dash',
    E = 'evernote',
    F = 'FirefoxDeveloperEdition',
    G = 'GitKraken',
    I = 'iterm',
    J = 'Jump Desktop',
    O = 'Microsoft Onenote',
    P = '1Password 6',
    S = 'Slack',
    V = 'MacVim',
    X = 'Xcode',
    Z = 'Franz'
}

for key, app in pairs(appShortCuts) do
    modalKey:bind('', key, 'Launching '..app, function() hs.application.launchOrFocus(app) end, function() modalKey:exit() end)
end




-- Enter Hyper Mode when F18 (Hyper/Capslock) is pressed
pressedF18 = function()
  k.triggered = false
  k:enter()
end

-- Leave Hyper Mode when F18 (Hyper/Capslock) is pressed,
--   send ESCAPE if no other keys are pressed.
releasedF18 = function()
  k:exit()
  if not k.triggered then
    hs.eventtap.keyStroke({}, 'ESCAPE')
  end
end

-- Bind the Hyper key
f18 = hs.hotkey.bind({}, 'F18', pressedF18, releasedF18)


https://www.reddit.com/r/osx/comments/48h39q/keyboard_shortcut_for_moving_a_window_to_a/
https://github.com/Hammerspoon/hammerspoon/wiki/Sample-Configurations

------------------------------------------------------
Karabiner for shift --> ()
	https://gist.github.com/carwin/4748951
	But it will not work with "sticky keys" turned on

